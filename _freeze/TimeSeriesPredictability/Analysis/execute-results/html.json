{
  "hash": "22e81e28be19188154bd0e811764d93f",
  "result": {
    "markdown": "---\ntitle: \"Don't Try to Forecast Everything: Predictability of Time Series\"\ndate: 09/01/2022\nauthor: Murat Koptur\ndraft: true\nexecute:\n  freeze: auto\n  echo: false\n  warning: false\n  error: false\nformat: \n   html:\n     df-print: paged\nlisting: true\neditor: \n  markdown: \n    wrap: 72\n---\n\n\nMost of time series analyses start with investigating series,\nautocorrelation and partial autocorrelation plots. Then one estimates\ndifferent time series models (like ARIMA, GARCH, State-space models) and\nperforms model checks.\n\nBut no one asks whether that series is predictable or not.\n\nWe'll look at a few handy tools that give more information about our\ntime series.\n\n\n::: {.cell}\n\n:::\n\n\n## Data\n\nWe'll use some example time series:\n\n-   Monthly Airline Passenger Numbers 1949-1960 (AirPassengers) \\[6\\]\n\n\n    ::: {.cell}\n    ::: {.cell-output-display}\n    ```{=html}\n    <div id=\"htmlwidget-1b4ff99564eb6e8884a5\" style=\"width:100%;height:464px;\" class=\"plotly html-widget\"></div>\n    <script type=\"application/json\" data-for=\"htmlwidget-1b4ff99564eb6e8884a5\">{\"x\":{\"visdat\":{\"2f101d083625\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"2f101d083625\",\"attrs\":{\"2f101d083625\":{\"x\":{},\"y\":{},\"mode\":\"lines\",\"line\":{\"width\":2,\"dash\":null,\"color\":\"#00526d\"},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"\",\"showgrid\":false},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"\",\"showgrid\":false},\"title\":\"AirPassengers\",\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[1949,1949.08333333333,1949.16666666667,1949.25,1949.33333333333,1949.41666666667,1949.5,1949.58333333333,1949.66666666667,1949.75,1949.83333333333,1949.91666666667,1950,1950.08333333333,1950.16666666667,1950.25,1950.33333333333,1950.41666666667,1950.5,1950.58333333333,1950.66666666667,1950.75,1950.83333333333,1950.91666666667,1951,1951.08333333333,1951.16666666667,1951.25,1951.33333333333,1951.41666666667,1951.5,1951.58333333333,1951.66666666667,1951.75,1951.83333333333,1951.91666666667,1952,1952.08333333333,1952.16666666667,1952.25,1952.33333333333,1952.41666666667,1952.5,1952.58333333333,1952.66666666667,1952.75,1952.83333333333,1952.91666666667,1953,1953.08333333333,1953.16666666667,1953.25,1953.33333333333,1953.41666666667,1953.5,1953.58333333333,1953.66666666667,1953.75,1953.83333333333,1953.91666666667,1954,1954.08333333333,1954.16666666667,1954.25,1954.33333333333,1954.41666666667,1954.5,1954.58333333333,1954.66666666667,1954.75,1954.83333333333,1954.91666666667,1955,1955.08333333334,1955.16666666667,1955.25,1955.33333333334,1955.41666666667,1955.5,1955.58333333334,1955.66666666667,1955.75,1955.83333333334,1955.91666666667,1956,1956.08333333334,1956.16666666667,1956.25,1956.33333333334,1956.41666666667,1956.5,1956.58333333334,1956.66666666667,1956.75,1956.83333333334,1956.91666666667,1957,1957.08333333334,1957.16666666667,1957.25,1957.33333333334,1957.41666666667,1957.5,1957.58333333334,1957.66666666667,1957.75,1957.83333333334,1957.91666666667,1958,1958.08333333334,1958.16666666667,1958.25,1958.33333333334,1958.41666666667,1958.5,1958.58333333334,1958.66666666667,1958.75,1958.83333333334,1958.91666666667,1959,1959.08333333334,1959.16666666667,1959.25,1959.33333333334,1959.41666666667,1959.5,1959.58333333334,1959.66666666667,1959.75,1959.83333333334,1959.91666666667,1960,1960.08333333334,1960.16666666667,1960.25,1960.33333333334,1960.41666666667,1960.5,1960.58333333334,1960.66666666667,1960.75,1960.83333333334,1960.91666666667],\"y\":[112,118,132,129,121,135,148,148,136,119,104,118,115,126,141,135,125,149,170,170,158,133,114,140,145,150,178,163,172,178,199,199,184,162,146,166,171,180,193,181,183,218,230,242,209,191,172,194,196,196,236,235,229,243,264,272,237,211,180,201,204,188,235,227,234,264,302,293,259,229,203,229,242,233,267,269,270,315,364,347,312,274,237,278,284,277,317,313,318,374,413,405,355,306,271,306,315,301,356,348,355,422,465,467,404,347,305,336,340,318,362,348,363,435,491,505,404,359,310,337,360,342,406,396,420,472,548,559,463,407,362,405,417,391,419,461,472,535,622,606,508,461,390,432],\"mode\":\"lines\",\"line\":{\"color\":\"#00526d\",\"width\":2,\"dash\":[]},\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n    ```\n    :::\n    :::\n\n\n-   Level of Lake Huron 1875-1972 (LakeHuron) \\[6\\]\n\n\n    ::: {.cell}\n    ::: {.cell-output-display}\n    ```{=html}\n    <div id=\"htmlwidget-8f836166d559454ecd73\" style=\"width:100%;height:464px;\" class=\"plotly html-widget\"></div>\n    <script type=\"application/json\" data-for=\"htmlwidget-8f836166d559454ecd73\">{\"x\":{\"visdat\":{\"2f103c3a4aac\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"2f103c3a4aac\",\"attrs\":{\"2f103c3a4aac\":{\"x\":{},\"y\":{},\"mode\":\"lines\",\"line\":{\"width\":2,\"dash\":null,\"color\":\"#00526d\"},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"\",\"showgrid\":false},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"\",\"showgrid\":false},\"title\":\"LakeHuron\",\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886,1887,1888,1889,1890,1891,1892,1893,1894,1895,1896,1897,1898,1899,1900,1901,1902,1903,1904,1905,1906,1907,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972],\"y\":[580.38,581.86,580.97,580.8,579.79,580.39,580.42,580.82,581.4,581.32,581.44,581.68,581.17,580.53,580.01,579.91,579.14,579.16,579.55,579.67,578.44,578.24,579.1,579.09,579.35,578.82,579.32,579.01,579,579.8,579.83,579.72,579.89,580.01,579.37,578.69,578.19,578.67,579.55,578.92,578.09,579.37,580.13,580.14,579.51,579.24,578.66,578.86,578.05,577.79,576.75,576.75,577.82,578.64,580.58,579.48,577.38,576.9,576.94,576.24,576.84,576.85,576.9,577.79,578.18,577.51,577.23,578.42,579.61,579.05,579.26,579.22,579.38,579.1,577.95,578.12,579.75,580.85,580.41,579.96,579.61,578.76,578.18,577.21,577.13,579.1,578.25,577.91,576.89,575.96,576.8,577.68,578.38,578.52,579.74,579.31,579.89,579.96],\"mode\":\"lines\",\"line\":{\"color\":\"#00526d\",\"width\":2,\"dash\":[]},\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n    ```\n    :::\n    :::\n\n\n-   Simulated time-series data from the Logistic map with chaos \\[1\\]\n\n\n    ::: {.cell}\n    ::: {.cell-output-display}\n    ```{=html}\n    <div id=\"htmlwidget-0d7db73d03839427d3b7\" style=\"width:100%;height:464px;\" class=\"plotly html-widget\"></div>\n    <script type=\"application/json\" data-for=\"htmlwidget-0d7db73d03839427d3b7\">{\"x\":{\"visdat\":{\"2f103f0c87\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"2f103f0c87\",\"attrs\":{\"2f103f0c87\":{\"x\":{},\"y\":{},\"mode\":\"lines\",\"line\":{\"width\":2,\"dash\":null,\"color\":\"#00526d\"},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"\",\"showgrid\":false},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"\",\"showgrid\":false},\"title\":\"LogisticTs\",\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],\"y\":[-0.0777676512186071,1.13605923409265,0.55281393187257,-1.13092435289918,0.375229683797959,0.792441327858747,0.706416361279344,-0.248615731494207,-0.185865612763473,-0.0967186639533861,0.669352394213108,-0.164881933647899,0.502062056580616,0.423239573581452,1.43223189290265,0.125887046317635,0.337527276591297,0.509782457637544,-0.284900635582188,1.67117147178906,1.06164300148377,-0.223855201872582,-0.136169843278988,0.537917098324899,0.505871788960486,-0.221781663377145,1.28735631615175,-0.511741686144108,-0.00722447853552209,-0.466596089192098,0.556654020801963,-0.215896779636237,-0.269039377479977,0.0627288456496687,0.0461121355766599,-0.104108913420527,-0.0916680679338424,-0.663914489037999,-0.120991797864667,-0.131064607753024,1.09076325221111,0.393870845424716,-0.161076582308388,0.641796966460846,0.184489212247749,0.383742508046837,-0.095354115918871,0.367053158543424,-0.234291891770273,-0.14098824433869,-0.51943929872594,0.654744153607589,-0.34933159182487,0.144686144095479,0.826225873475405,0.617691981578053,1.71653989129894,-0.00331360713730056,1.7485381531733,-0.373082320914532,0.982131338661017,2.17983211402039,0.325428837094169,0.566347208480994,0.352467407977919,1.80590872621421,-0.266083056818116,1.52902539369502,1.1883737663965,1.16601018745827,0.012331439731327,-0.192510061397199,-0.0473277431100395,0.793967724773303,2.03149317322687,-0.0621832406360635,-0.638129463989961,-0.146003826761008,0.806022904109334,0.716307291279316,0.349094368414798,0.89962167735329,-0.625572141677545,0.140742455187408,1.12838762259283,1.1835271546903,0.826841267249107,0.787883395018022,-0.0532567192922987,-0.434341938888671,0.51893428075324,1.11931201654277,0.885851309320187,0.627912283953483,0.196156664372829,1.16520801471516,-0.517667218034305,0.627793779267458,1.09880760803655,2.01006915354945],\"mode\":\"lines\",\"line\":{\"color\":\"#00526d\",\"width\":2,\"dash\":[]},\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n    ```\n    :::\n    :::\n\n\n    Let's look the tools.\n\n## Lyapunov Exponent\n\nLyapunov exponent of a dynamical system is a quantity that characterizes\nthe rate of separation of infinitesimally close trajectories.\nQuantitatively, two trajectories in phase space with initial separation\nvector $\\delta Z_0$ diverge at a rate given by\n\n\n$$\n|\\delta Z(t)|\\approx e^{\\lambda t}|\\delta Z_0|\n$$\n\n\nwhere $\\lambda$ is the Lyapunov exponent. The rate of separation can be\ndifferent for different orientations of initial separation vector. Thus,\nthere is a spectrum of Lyapunov exponents. It is common to refer to the\nlargest one as the maximal Lyapunov exponent (MLE), because it\ndetermines a notion of predictability for a dynamical system \\[7\\].\n\n![](images/paste-DD2528C4.png)\n\n![](images/paste-875EA0B2.png)\n\nI'll not go into detail on how to calculate the maximal Lyapunov\nexponent, we'll look at practical implications.\n\nA positive MLE is usually taken as an indication that the system is\nchaotic \\[7\\].\n\n## Hurst Exponent\n\nThe Hurst exponent is referred to as the \"index of dependence\" or \"index\nof long-range dependence\". It quantifies the relative tendency of a time\nseries either to regress strongly to the mean or to cluster in a\ndirection:\n\n-   Trending (Persistent) series: If $0.5 < H \\leq 1$ , then series has\n    long-term positive autocorrelation, so a high value in the series\n    will probably be followed by another high value and the future will\n    also tend to be high;\n\n-   Random walk series: if $H = 0.5$, then series is a completely\n    uncorrelated series, so it can go either way (up or down);\n\n-   Mean-reverting (Anti-persistent) series: if $0 \\leq H < 0.5$, then\n    series has mean-reversion, so a high value in the series will\n    probably be followed by a low value and vice versa \\[8\\].\n\n## Detrended Fluctuation Analysis\n\nDFA is a method for determining the statistical self-affinity of a\nsignal. It is the generalization of Hurst exponent, it means \\[10\\]:\n\n-   for $0<\\alpha<0.5$, then the series is anti-correlated;\n\n-   for $\\alpha=0.5$, then the series is uncorrelated and corresponds to\n    white noise;\n\n-   for $0.5<\\alpha<1$, then the series is correlated;\n\n-   for $\\alpha\\approx1$, then the series corresponds to pink noise;\n\n-   for $\\alpha>1$, then the series is nonstationary and unbounded;\n\n-   for $\\alpha\\approx1.5$, then the series corresponds to Brownian\n    noise.\n\n## Variance Ratio Test\n\nThis test is often used to test the hypothesis that a given time series\nis a collection of i.i.d. observations or that it follows a martingale\ndifference sequence.\n\n## Statistics of the series\n\n### AirPassengers data\n\n\n\n\n\nResults:\n\n-   Lyapunov exponent spectrum:\n\n\n    ::: {.cell}\n    ::: {.cell-output .cell-output-stdout}\n    ```\n    Call:\n    Lyapunov exponent spectrum \n    \n    Coefficients:\n                 Estimate Std. Error   z value      Pr(>|z|)\n    Exponent 1 -0.8398548  0.2333552 -28.33887 5.739062e-177\n    Exponent 2 -1.5136329  0.1937088 -61.52719  0.000000e+00\n    ---\n    Procedure: QR decomposition by bootstrap blocking method \n    Embedding dimension: 2, Time-delay: 1, No. hidden units: 10\n    Sample size: 129, Block length: 62, No. blocks: 1000\n    ```\n    :::\n    :::\n\n\n    There are two statistically significant exponent estimates. The\n    largest one is -0.84 which is negative, which means the series is\n    not chaotic.\n\n-   Hurst exponent is 0.8206234; it is bigger than 0.5, so series\n    is trending.\n\n-   DFA is estimated as 1.2988566; it is nonstationary and\n    unbounded.\n\n-   Variance ratio test:\n\n\n    ::: {.cell}\n    ::: {.cell-output .cell-output-stdout}\n    ```\n    $Holding.Periods\n    [1]  2  4  5  8 10 27\n    \n    $CD1\n    [1] 24.48521\n    \n    $CD2\n    [1] 21.22941\n    \n    $Critical.Values_10_5_1_percent\n    [1] 2.378000 2.631038 3.142756\n    ```\n    :::\n    :::\n\n    \n\n## References\n\n1.  DChaos, <https://cran.r-project.org/web/packages/DChaos/index.html>\n2.  statcomp,\n    <https://cran.r-project.org/web/packages/statcomp/index.html>\n3.  pracma, <https://cran.r-project.org/web/packages/pracma/index.html>\n4.  tseriesChaos,\n    <https://cran.r-project.org/web/packages/tseriesChaos/index.html>\n5.  Daniel F. McCaffrey , Stephen Ellner , A. Ronald Gallant &\n    Douglas W. Nychka (1992) Estimating the Lyapunov Exponent of a\n    Chaotic System with Nonparametric Regression, Journal of the\n    American Statistical Association, 87:419, 682-695\n6.  boot,\n    <https://www.rdocumentation.org/packages/boot/versions/1.3-28/topics/boot>.\n7.  Contributors to Wikimedia projects. \"Lyapunov exponent - Wikipedia.\"\n    7 July 2022,\n    [en.wikipedia.org/w/index.php?title=Lyapunov_exponent&oldid=1096875011](en.wikipedia.org/w/index.php?title=Lyapunov_exponent&oldid=1096875011).\n8.  Contributors to Wikimedia projects. \"Hurst exponent - Wikipedia.\" 12\n    June 2022,\n    [en.wikipedia.org/w/index.php?title=Hurst_exponent&oldid=1092814465](en.wikipedia.org/w/index.php?title=Hurst_exponent&oldid=1092814465).\n9.  DFA, <https://cran.r-project.org/package=DFA>\n10. Contributors to Wikimedia projects. \"Detrended fluctuation\n    analysis - Wikipedia.\" 19 June 2022,\n    <https://en.wikipedia.org/w/index.php?title=Detrended_fluctuation_analysis&oldid=1093832537>.\n11. nonlinearTseries,\n    <https://cran.r-project.org/web/packages/nonlinearTseries/index.html>.\n",
    "supporting": [
      "Analysis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/htmlwidgets-1.5.4/htmlwidgets.js\"></script>\r\n<script src=\"../site_libs/plotly-binding-4.10.0/plotly.js\"></script>\r\n<script src=\"../site_libs/typedarray-0.1/typedarray.min.js\"></script>\r\n<script src=\"../site_libs/jquery-3.5.1/jquery.min.js\"></script>\r\n<link href=\"../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\r\n<script src=\"../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\r\n<link href=\"../site_libs/plotly-htmlwidgets-css-2.5.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\r\n<script src=\"../site_libs/plotly-main-2.5.1/plotly-latest.min.js\"></script>\r\n<link href=\"../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}