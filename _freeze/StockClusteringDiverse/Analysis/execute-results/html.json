{
  "hash": "7be4403e96004df840d79f11a7303325",
  "result": {
    "markdown": "---\ntitle: \"Diversified Portfolio with Stock Clustering\"\ndraft: true\ndate: 09/20/2022\nauthor: Murat Koptur\nkeywords: data science, statistics, time series, clustering, portfolio management, stock portfolio, machine learning\ndescription-meta: \"How to create diversified portfolio using clustering.\"\nexecute:\n  freeze: auto\n  warning: false\n  error: false\nformat: \n   html:\n     df-print: paged\nlisting: true\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n# Introduction\n\n[Last time](https://muratkoptur.com/MyDsProjects/StockClustering/Analysis.html),\nwe analyzed similar stocks in XU30 index and calculated each cluster's mean \nreturn and risk. \n\nSimilar method can be used to diversify portfolio and minimizing the risk: we'll\nagain apply clustering methods to determine different subsets of stocks in the\nXU100 market. And we select one stock from each cluster and calculate their\nreturn and risk and try to beat the market.\n\nNote: We assume that the index components have not changed over the time. \nFor a more realistic calculation, the stocks added to and excluded from the \nindex should also be taken into account.\n\n# Data\n\nRead data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(cluster)\nlibrary(factoextra)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(NbClust)\nlibrary(quantmod)\nlibrary(tibble)\nlibrary(tidyquant)\nlibrary(tidyr)\n\nset.seed(1234)\n\n# Delete the comment for downloading the data\n# stock_list <- read.table(\"bist100_stocks.txt\") \n# stock_ohlc <- stock_list$V1 |> tq_get() \n# saveRDS(stock_ohlc, file=\"stock_data.rds\")\nstock_ohlc <- readRDS(\"stock_data.rds\")\n```\n:::\n\n\nVisualize annual returns of 5 stocks which has most volume:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_5_by_vol <- stock_ohlc %>% \n  filter(symbol != \"XU100.IS\") %>%\n  group_by(symbol) %>% \n  summarise(Volume = sum(volume)) %>% \n  top_n(5)\n\nstock_ohlc %>% \n  filter(symbol %in% top_5_by_vol$symbol) %>% \n  group_by(symbol) %>% \n  tq_transmute(select     = adjusted, \n               mutate_fun = periodReturn, \n               period     = \"yearly\", \n               col_rename = \"yearly.returns\") %>%\n  ggplot(aes(x = year(date), y = yearly.returns, fill = symbol)) +\n  geom_bar(position = \"dodge\", stat = \"identity\") +\n  labs(title = \"5 Most Active XU100 Stocks\", \n       y = \"Returns\", x = \"\", color = \"\") +\n  scale_y_continuous(labels = scales::percent) +\n  theme_tq() +\n  scale_fill_tq()\n```\n\n::: {.cell-output-display}\n![](Analysis_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nCalculate daily returns for each stock and the market:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndaily_returns <- stock_ohlc %>% \n  group_by(symbol) %>%\n  tq_transmute(select = adjusted,\n               mutate_fun = periodReturn,\n               type = \"log\",\n               period = \"daily\",\n               col_rename = \"daily.returns\")\n```\n:::\n\n\nPivot the data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndaily_returns <- daily_returns %>% \n  pivot_wider(names_from = symbol, values_from = daily.returns)\n```\n:::\n\n\nCheck the NA counts:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolSums(is.na(daily_returns))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    date XU100.IS AGHOL.IS AKBNK.IS AKCNS.IS  AKSA.IS AKSEN.IS ALGYO.IS \n       0       80        0        0        0        0        0        0 \nALARK.IS ALBRK.IS ALKIM.IS AEFES.IS ARCLK.IS ARDYZ.IS ASELS.IS AYDEM.IS \n       0        0        0        0        0     2111        0     2421 \nAYGAZ.IS  BERA.IS BIMAS.IS BIOEN.IS BRISA.IS CCOLA.IS CANTE.IS CEMTS.IS \n       0      234        0     2763        0        0     2421        0 \nCIMSA.IS  DEVA.IS DOHOL.IS  DOAS.IS EGEEN.IS ECILC.IS EKGYO.IS ENJSA.IS \n       0        0        0        0        0        0        0     1593 \nENKAI.IS ERBOS.IS EREGL.IS  ESEN.IS FROTO.IS GLYHO.IS GOZDE.IS GUBRF.IS \n       0        0        0     2763        0        0        0        0 \nSAHOL.IS HLGYO.IS HEKTS.IS INDES.IS ISDMR.IS ISFIN.IS ISGYO.IS ISMEN.IS \n       0      312        0        0     1105        0        0        0 \nIZMDC.IS KRDMD.IS KARSN.IS KARTN.IS KERVT.IS KRVGD.IS KCHOL.IS KORDS.IS \n       0        0        0        0        0     2763        0        0 \nKOZAL.IS KOZAA.IS  LOGO.IS  MAVI.IS MGROS.IS MPARK.IS NETAS.IS  ODAS.IS \n       0        0        0     1423        0     1596        0      361 \nOTKAR.IS OYAKC.IS PARSN.IS PGSUS.IS PETKM.IS QUAGR.IS SARKY.IS  SASA.IS \n       0        0        0      405        0     2407        0        0 \nSELEC.IS SKBNK.IS  SOKM.IS TAVHL.IS TKFEN.IS TKNSA.IS TOASO.IS TRGYO.IS \n       0        0     1664        0        0       98        0        0 \nTRILC.IS TCELL.IS  TMSN.IS TUPRS.IS THYAO.IS TTKOM.IS TTRAK.IS GARAN.IS \n    2763        0      406        0        0        0        0        0 \nHALKB.IS ISCTR.IS  TSKB.IS TURSG.IS  SISE.IS VAKBN.IS ULKER.IS VERUS.IS \n       0        0        0        0        0        0        0      493 \nVESBE.IS VESTL.IS YKBNK.IS YATAS.IS ZRGYO.IS ZOREN.IS \n       0        0        0        0     2763        0 \n```\n:::\n:::\n\n\nSome stocks have only one day data, 30% or more missing data. We discard them \nand subset the data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndaily_returns <- daily_returns %>%\n  select(where(~ sum(is.na(.x)) < 0.3 * 2764))\n\nindx <- complete.cases(daily_returns)\ndaily_returns <- daily_returns[indx, ]\n```\n:::\n\n\nCheck NA count again and date continuity:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(sum(colSums(is.na(daily_returns))))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n\n```{.r .cell-code}\nprint(daily_returns %>% select(date) %>% mutate(date_diff = date - lag(date)) %>% filter(date_diff > 3))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 37 × 2\n   date       date_diff\n   <date>     <drtn>   \n 1 2014-05-20 4 days   \n 2 2014-07-31 6 days   \n 3 2014-10-08 5 days   \n 4 2015-05-04 4 days   \n 5 2015-07-20 4 days   \n 6 2015-09-28 5 days   \n 7 2016-01-04 4 days   \n 8 2016-07-08 4 days   \n 9 2016-09-16 7 days   \n10 2017-05-02 4 days   \n# … with 27 more rows\n```\n:::\n:::\n\n\nI'll omit the gaps for sake of simplicity. Finally, split the market and stocks data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmarket_return <- tibble(date=daily_returns$date, \n                        daily.return=daily_returns$XU100.IS)\nstock_returns <- tibble(date=daily_returns$date,\n                        daily_returns[,!(colnames(daily_returns) %in% c(\"date\", \"XU100.IS\"))])\n```\n:::\n\n\n# Clustering\n\nLet's standardize the data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstock_returns_scaled <- stock_returns %>% select(!date) %>% mutate_each(funs(scale))\nstock_returns_scaled[1:5, 1:5]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"AGHOL.IS\"],\"name\":[1],\"type\":[\"dbl[,1]\"],\"align\":[\"right\"]},{\"label\":[\"AKBNK.IS\"],\"name\":[2],\"type\":[\"dbl[,1]\"],\"align\":[\"right\"]},{\"label\":[\"AKCNS.IS\"],\"name\":[3],\"type\":[\"dbl[,1]\"],\"align\":[\"right\"]},{\"label\":[\"AKSA.IS\"],\"name\":[4],\"type\":[\"dbl[,1]\"],\"align\":[\"right\"]},{\"label\":[\"AKSEN.IS\"],\"name\":[5],\"type\":[\"dbl[,1]\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"-0.03006049\",\"2\":\"-0.9653567\",\"3\":\"-0.4530960\",\"4\":\"-0.2773554\",\"5\":\"-0.4858713\"},{\"1\":\"0.35432998\",\"2\":\"0.2224088\",\"3\":\"0.7977280\",\"4\":\"0.2552069\",\"5\":\"1.3592870\"},{\"1\":\"0.06550771\",\"2\":\"-0.2557804\",\"3\":\"0.5799892\",\"4\":\"-0.3835522\",\"5\":\"-0.3352920\"},{\"1\":\"0.16042642\",\"2\":\"0.3414788\",\"3\":\"0.7725964\",\"4\":\"0.1490101\",\"5\":\"0.5004160\"},{\"1\":\"-0.41188893\",\"2\":\"0.4563484\",\"3\":\"-0.8424386\",\"4\":\"0.4643505\",\"5\":\"0.2193566\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nFind optimum number of clusters for k-means:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# nb <- NbClust(stock_returns_scaled, method = \"kmeans\", max.nc = 10)\n# print(nb$Best.nc)\n# \n# fviz_nbclust(nb, kmeans, method = \"gap_stat\")\n```\n:::\n\n\n\nFull source code:\n<https://github.com/mrtkp9993/MyDsProjects/tree/main/StockClusteringDiverse>\n\n# References\n\n$^1$ \n",
    "supporting": [
      "Analysis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}